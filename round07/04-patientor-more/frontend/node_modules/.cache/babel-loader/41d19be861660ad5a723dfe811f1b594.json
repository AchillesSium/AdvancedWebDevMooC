{"ast":null,"code":"export const loadPatients = patientsList => {\n  return {\n    type: \"SET_PATIENT_LIST\",\n    payload: {\n      patientsList\n    }\n  };\n};\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_PATIENT_LIST\":\n      return { ...state,\n        patients: { ...action.payload.reduce((memo, patient) => ({ ...memo,\n            [patient.id]: patient\n          }), {}),\n          ...state.patients\n        }\n      };\n\n    case \"ADD_PATIENT\":\n      return { ...state,\n        patients: { ...state.patients,\n          [action.payload.id]: action.payload\n        }\n      };\n\n    case \"GET_PATIENT_INFO\":\n      return { ...state,\n        patients: { ...state.patients\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/user/Desktop/Tuni/2nd_Semester/Advanced_Web_Front_End/round07/04-patientor-more/frontend/src/your-solution/state/reducer.ts"],"names":["loadPatients","patientsList","type","payload","reducer","state","action","patients","reduce","memo","patient","id"],"mappings":"AAiBI,OAAO,MAAMA,YAAY,GAAIC,YAAD,IAA6B;AACvD,SAAO;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAE;AAACF,MAAAA;AAAD;AAFJ,GAAP;AAID,CALM;AAOX,OAAO,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAeC,MAAf,KAAyC;AAC9D,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELE,QAAAA,QAAQ,EAAE,EACR,GAAGD,MAAM,CAACH,OAAP,CAAeK,MAAf,CACD,CAACC,IAAD,EAAOC,OAAP,MAAoB,EAAE,GAAGD,IAAL;AAAW,aAACC,OAAO,CAACC,EAAT,GAAcD;AAAzB,WAApB,CADC,EAED,EAFC,CADK;AAKR,aAAGL,KAAK,CAACE;AALD;AAFL,OAAP;;AAUF,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELE,QAAAA,QAAQ,EAAE,EACR,GAAGF,KAAK,CAACE,QADD;AAER,WAACD,MAAM,CAACH,OAAP,CAAeQ,EAAhB,GAAqBL,MAAM,CAACH;AAFpB;AAFL,OAAP;;AAOF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELE,QAAAA,QAAQ,EAAE,EACR,GAAGF,KAAK,CAACE;AADD;AAFL,OAAP;;AAMF;AACE,aAAOF,KAAP;AA5BJ;AA8BD,CA/BM","sourcesContent":["import { State } from \"./state\";\nimport { Patient } from \"../types\";\n\nexport type Action =\n  | {\n      type: \"SET_PATIENT_LIST\";\n      payload: Patient[];\n    }\n  | {\n      type: \"ADD_PATIENT\";\n      payload: Patient;\n    }\n  | {\n      type: \"GET_PATIENT_INFO\";\n      payload: Patient;\n    };\n\n    export const loadPatients = (patientsList: Patient[]) => {\n      return {\n        type: \"SET_PATIENT_LIST\",\n        payload: {patientsList}\n      };\n    };\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"SET_PATIENT_LIST\":\n      return {\n        ...state,\n        patients: {\n          ...action.payload.reduce(\n            (memo, patient) => ({ ...memo, [patient.id]: patient }),\n            {}\n          ),\n          ...state.patients\n        }\n      };\n    case \"ADD_PATIENT\":\n      return {\n        ...state,\n        patients: {\n          ...state.patients,\n          [action.payload.id]: action.payload\n        }\n      };    \n    case \"GET_PATIENT_INFO\":\n      return {\n        ...state,\n        patients: {\n          ...state.patients\n        }\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}